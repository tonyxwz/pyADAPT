from pyADAPT.basemodel import BaseModel
import numpy as np
inf = np.inf

class {{model_name}}(BaseModel):
    def __init__(self):
        self.name = "{{model_name}}"
        self.description = """{{model.notes}}"""
        {# here the parameter lower and upper bounds have to be considered #}
        {% for index, parameter in model.parameters.iterrows() %}
        self.add_parameter(name="{{parameter.name}}", value={{parameter.value}}, vary={{parameter.vary}}, lb={{parameter.lb}}, ub={{parameter.ub}}){% endfor %}

        self.sm = np.array(
            {{sm}}
        )

        super().__init__(
            state_order={{model.state_order}},
            initial_states={{initial_states}},
            flux_order={{model.flux_order}}
        )

    def fluxes(self, t, x, p):
        {% for s in model.state_order %}
        {{s}} = x[self["{{s}}"]]{% endfor %}

        {% for p in model.parameters.index %}
        {{p}} = p['{{p}}']{% endfor %}

        {% for k,v in model.reactions.items() %}
        {{k}} = {{v.text_formula}}{% endfor%}

        return np.array([{% for k in model.reactions.keys() %}{{k}}, {% endfor %}])

    def inputs(self, t):
        # return the input at time `t`
        return super().inputs(t)

    def state_ode(self, t, x, p):
        v = self.fluxes(t, x, p)
        return np.dot(self.sm, v)