import numpy as np
from pyADAPT import Model


class {{model_name}}(Model):
    def __init__(self):
        self.name = "{{model_name}}"
        self.descrption = """{{model_description}}"""
        {% for predictor in predictors %}
        self.add_predictor(name="{{predictor.name}}", value={{predictor.value}}){% endfor %}
        {% for constant in constans %}
        self.add_constant(name="{{constant.name}}", value={{constant.value}}){% endfor %}

        {# here the parameter lower and upper bounds have to be considered #}
        {% for parameter in parameters %}
        self.add_parameter(name="{{parameter.name}}",
            value={{parameter.value}},
            vary={{parameter.vary}},
            lb={% if %}{{parameter.lb}},
            ub={{parameter.ub}}
        ){% endfor %}

        {% for state in states %}
        self.add_state(name="{{state.name}}", init={{state.init}}){% endfor %}

        super().__init__()

    def inputs(self, t):
        {# this is the first thing to consider when building a model, although being very simplified in the toy model#}
        # return the input at time `t`
        pass
    def fluxes(self, t, x, p):
        {# then define the fluxes #}
        pass
    def reactions(self, t, x, p):
        return self.fluxes(t, x, p)

    def odefunc(self, t, x, p):
        {# the ode definition here #}
        pass